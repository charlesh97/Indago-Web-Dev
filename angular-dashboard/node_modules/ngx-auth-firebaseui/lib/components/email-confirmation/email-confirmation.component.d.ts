import { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { Router } from '@angular/router';
import { AuthProcessService } from '../../services/auth-process.service';
import * as ɵngcc0 from '@angular/core';
interface VerifyEmailContext {
    email: string;
    goBackURL: string;
    verifyEmailTitleText: string;
    verifyEmailConfirmationText: string;
    verifyEmailGoBackText: string;
    messageOnEmailConfirmationSuccess: string;
    messageOnError: string;
}
export declare class EmailConfirmationComponent implements OnInit, OnChanges {
    authProcess: AuthProcessService;
    private router;
    private changeDetectorRef;
    email: string;
    goBackURL: string;
    verifyEmailTitleText: string;
    verifyEmailConfirmationText: string;
    verifyEmailGoBackText: string;
    sendNewVerificationEmailText: string;
    signOutText: string;
    messageOnEmailConfirmationSuccess: string;
    template: TemplateRef<any>;
    signOut: EventEmitter<any>;
    verifyEmailTemplate: TemplateRef<any>;
    verifyEmailContext: VerifyEmailContext;
    isLoading: boolean;
    defaultTemplate: TemplateRef<any>;
    constructor(authProcess: AuthProcessService, router: Router, changeDetectorRef: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    continue(): Promise<void>;
    sendNewVerificationEmail(): Promise<void>;
    private createTemplateContext;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EmailConfirmationComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<EmailConfirmationComponent, "ngx-auth-firebaseui-email-confirmation", never, { "email": "email"; "goBackURL": "goBackURL"; "verifyEmailTitleText": "verifyEmailTitleText"; "verifyEmailConfirmationText": "verifyEmailConfirmationText"; "verifyEmailGoBackText": "verifyEmailGoBackText"; "sendNewVerificationEmailText": "sendNewVerificationEmailText"; "signOutText": "signOutText"; "messageOnEmailConfirmationSuccess": "messageOnEmailConfirmationSuccess"; "template": "template"; }, { "signOut": "signOut"; }, never, never>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1haWwtY29uZmlybWF0aW9uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJlbWFpbC1jb25maXJtYXRpb24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEF1dGhQcm9jZXNzU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2F1dGgtcHJvY2Vzcy5zZXJ2aWNlJztcbmludGVyZmFjZSBWZXJpZnlFbWFpbENvbnRleHQge1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgZ29CYWNrVVJMOiBzdHJpbmc7XG4gICAgdmVyaWZ5RW1haWxUaXRsZVRleHQ6IHN0cmluZztcbiAgICB2ZXJpZnlFbWFpbENvbmZpcm1hdGlvblRleHQ6IHN0cmluZztcbiAgICB2ZXJpZnlFbWFpbEdvQmFja1RleHQ6IHN0cmluZztcbiAgICBtZXNzYWdlT25FbWFpbENvbmZpcm1hdGlvblN1Y2Nlc3M6IHN0cmluZztcbiAgICBtZXNzYWdlT25FcnJvcjogc3RyaW5nO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRW1haWxDb25maXJtYXRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gICAgYXV0aFByb2Nlc3M6IEF1dGhQcm9jZXNzU2VydmljZTtcbiAgICBwcml2YXRlIHJvdXRlcjtcbiAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yUmVmO1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgZ29CYWNrVVJMOiBzdHJpbmc7XG4gICAgdmVyaWZ5RW1haWxUaXRsZVRleHQ6IHN0cmluZztcbiAgICB2ZXJpZnlFbWFpbENvbmZpcm1hdGlvblRleHQ6IHN0cmluZztcbiAgICB2ZXJpZnlFbWFpbEdvQmFja1RleHQ6IHN0cmluZztcbiAgICBzZW5kTmV3VmVyaWZpY2F0aW9uRW1haWxUZXh0OiBzdHJpbmc7XG4gICAgc2lnbk91dFRleHQ6IHN0cmluZztcbiAgICBtZXNzYWdlT25FbWFpbENvbmZpcm1hdGlvblN1Y2Nlc3M6IHN0cmluZztcbiAgICB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBzaWduT3V0OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB2ZXJpZnlFbWFpbFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHZlcmlmeUVtYWlsQ29udGV4dDogVmVyaWZ5RW1haWxDb250ZXh0O1xuICAgIGlzTG9hZGluZzogYm9vbGVhbjtcbiAgICBkZWZhdWx0VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgY29uc3RydWN0b3IoYXV0aFByb2Nlc3M6IEF1dGhQcm9jZXNzU2VydmljZSwgcm91dGVyOiBSb3V0ZXIsIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBjb250aW51ZSgpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHNlbmROZXdWZXJpZmljYXRpb25FbWFpbCgpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHByaXZhdGUgY3JlYXRlVGVtcGxhdGVDb250ZXh0O1xufVxuZXhwb3J0IHt9O1xuIl19