{"version":3,"file":"ngx-auth-firebaseui.js","sources":["ng:/ngx-auth-firebaseui/lib/enums/accounts.enum.ts","ng:/ngx-auth-firebaseui/lib/services/firestore-sync.service.ts","ng:/ngx-auth-firebaseui/lib/tokens/index.ts","ng:/ngx-auth-firebaseui/lib/services/auth-process.service.ts","ng:/ngx-auth-firebaseui/lib/components/email-confirmation/email-confirmation.component.ts","ng:/ngx-auth-firebaseui/lib/components/legality-dialog/legality-dialog.component.ts","ng:/ngx-auth-firebaseui/lib/animations/index.ts","ng:/ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui/auth.component.ts","ng:/ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component.ts","ng:/ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component.ts","ng:/ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component.ts","ng:/ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-user/user.component.ts","ng:/ngx-auth-firebaseui/lib/components/providers/auth.providers.component.ts","ng:/ngx-auth-firebaseui/lib/interfaces/config.interface.ts","ng:/ngx-auth-firebaseui/lib/guards/logged-in.guard.ts","ng:/ngx-auth-firebaseui/lib/ngx-auth-firebaseui.module.ts","ng:/ngx-auth-firebaseui/public-api.ts","ng:/ngx-auth-firebaseui/ngx-auth-firebaseui.ts"],"names":[],"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","sourcesContent":["export enum Accounts {\n  NONE = 'account',\n  CHECK = 'account-check',\n  EDIT = 'account-edit',\n  OFF = 'account-off',\n  REMOVE = 'account-remove',\n}\n","import {Injectable} from '@angular/core';\nimport {AngularFirestore, AngularFirestoreDocument} from '@angular/fire/firestore';\nimport {UserInfo} from 'firebase';\n\nexport const collections = {\n  users: 'users',\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirestoreSyncService {\n\n  constructor(public afs: AngularFirestore) {\n    // this.afs.firestore.settings({timestampsInSnapshots: true});\n  }\n\n  // get timestamp() {\n  //     return firebase.firestore.FieldValue.serverTimestamp();\n  // }\n\n  public getUserDocRefByUID(uid: string): AngularFirestoreDocument<UserInfo> {\n    return this.afs.doc(`${collections.users}/${uid}`);\n  }\n\n  public deleteUserData(uid: string): Promise<any> {\n    const userRef: AngularFirestoreDocument<UserInfo> = this.getUserDocRefByUID(uid);\n    return userRef.delete();\n  }\n\n\n  public updateUserData(user: UserInfo): Promise<any> {\n    // Sets user$ data to firestore on login\n    const userRef: AngularFirestoreDocument<UserInfo> = this.getUserDocRefByUID(user.uid);\n    const data: UserInfo = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      phoneNumber: user.phoneNumber,\n      providerId: user.providerId\n    };\n    return userRef.set(data, {merge: true});\n  }\n}\n","// This token is the official token containing the final configuration; ie. the merge between default and user provided configurations\nimport {InjectionToken} from '@angular/core';\nimport {NgxAuthFirebaseUIConfig} from '../interfaces';\n\nexport const NgxAuthFirebaseUIConfigToken = new InjectionToken<NgxAuthFirebaseUIConfig>('NgxAuthFirebaseUIConfigToken');\n// This is an intermediate token containing only user-provided configuration\nexport const UserProvidedConfigToken = new InjectionToken<NgxAuthFirebaseUIConfig>('UserProvidedConfigToken');\n","import { EventEmitter, forwardRef, Inject, Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { firebase } from '@firebase/app';\nimport '@firebase/auth';\nimport { User, UserInfo } from 'firebase/app';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Accounts } from '../enums';\nimport { FirestoreSyncService } from './firestore-sync.service';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { ICredentials, ISignInProcess, ISignUpProcess, NgxAuthFirebaseUIConfig } from '../interfaces';\nimport { NgxAuthFirebaseUIConfigToken } from '../tokens';\nimport UserCredential = firebase.auth.UserCredential;\n\nexport const facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nexport const appleAuthProvider = new firebase.auth.OAuthProvider('apple.com');\nexport const twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\nexport const githubAuthProvider = new firebase.auth.GithubAuthProvider();\nexport const microsoftAuthProvider = new firebase.auth.OAuthProvider('microsoft.com');\nexport const yahooAuthProvider = new firebase.auth.OAuthProvider('yahoo.com');\n\nexport enum AuthProvider {\n  ALL = 'all',\n  ANONYMOUS = 'anonymous',\n  EmailAndPassword = 'firebase',\n  Google = 'google',\n  Apple = 'apple',\n  Facebook = 'facebook',\n  Twitter = 'twitter',\n  Github = 'github',\n  Microsoft = 'microsoft',\n  Yahoo = 'yahoo',\n  PhoneNumber = 'phoneNumber'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthProcessService implements ISignInProcess, ISignUpProcess {\n  onSuccessEmitter: EventEmitter<any> = new EventEmitter<any>();\n  onErrorEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  // Useful to know about auth state even between reloads.\n  // Replace emailConfirmationSent and emailToConfirm.\n  private _user$ = new BehaviorSubject<firebase.User | null>(null);\n  get user$(): Observable<firebase.User | null> {\n    return this._user$.asObservable();\n  }\n\n  /**\n   * @deprecated access via user$ asynchronously instead\n   */\n  user: User;\n\n  messageOnAuthSuccess: string;\n  messageOnAuthError: string;\n\n  // Legacy field that is set to true after sign up.\n  // Value is lost in case of reload. The idea here is to know if we just sent a verification email.\n  emailConfirmationSent: boolean;\n  // Legacy filed that contain the mail to confirm. Same lifecycle than emailConfirmationSent.\n  emailToConfirm: string;\n\n  constructor(\n    public afa: AngularFireAuth,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken)) public config: NgxAuthFirebaseUIConfig,\n    private snackBar: MatSnackBar,\n    private fireStoreService: FirestoreSyncService,\n    @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS) private matSnackBarConfig: MatSnackBarConfig\n  ) {\n  }\n\n  listenToUserEvents() {\n    this.afa.user.subscribe((user: firebase.User | null) => {\n      this._user$.next(user);\n      this.user = user;\n    });\n  }\n\n  /**\n   * Reset the password of the ngx-auth-firebaseui-user via email\n   *\n   * @param email - the email to reset\n   */\n  public async resetPassword(email: string): Promise<void> {\n    try {\n      console.log('Password reset email sent');\n      return await this.afa.sendPasswordResetEmail(email);\n    } catch (error) {\n      return this.notifyError(error);\n    }\n  }\n\n  /**\n   * General sign in mechanism to authenticate the users with a firebase project\n   * using a traditional way, via username and password or by using an authentication provider\n   * like google, facebook, twitter and github\n   *\n   * @param provider - the provider to authenticate with (google, facebook, twitter, github)\n   * @param credentials optional email and password\n   */\n  public async signInWith(provider: AuthProvider, credentials?: ICredentials) {\n    try {\n      let signInResult: UserCredential | any;\n\n      switch (provider) {\n        case AuthProvider.ANONYMOUS:\n          signInResult = await this.afa.signInAnonymously() as UserCredential;\n          break;\n\n        case AuthProvider.EmailAndPassword:\n          signInResult = await this.afa.signInWithEmailAndPassword(credentials.email, credentials.password) as UserCredential;\n          break;\n\n        case AuthProvider.Google:\n          signInResult = await this.afa.signInWithPopup(googleAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Apple:\n          signInResult = await this.afa.signInWithPopup(appleAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Facebook:\n          signInResult = await this.afa.signInWithPopup(facebookAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Twitter:\n          signInResult = await this.afa.signInWithPopup(twitterAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Github:\n          signInResult = await this.afa.signInWithPopup(githubAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Microsoft:\n          signInResult = await this.afa.signInWithPopup(microsoftAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Yahoo:\n          signInResult = await this.afa.signInWithPopup(yahooAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.PhoneNumber:\n          // coming soon - see feature/sms branch\n          break;\n\n        default:\n          throw new Error(`${AuthProvider[provider]} is not available as auth provider`);\n      }\n      await this.handleSuccess(signInResult);\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  /**\n   * Sign up new users via email and password.\n   * After that the ngx-auth-firebaseui-user should verify and confirm an email sent via the firebase\n   *\n   * @param displayName - the displayName if the new ngx-auth-firebaseui-user\n   * @param credentials email and password\n   * @returns -\n   */\n  public async signUp(displayName: string, credentials: ICredentials) {\n    try {\n      const userCredential: UserCredential = await this.afa.createUserWithEmailAndPassword(credentials.email, credentials.password);\n      const user = userCredential.user;\n      await this.updateProfile(displayName, user.photoURL);\n\n      if (this.config.enableFirestoreSync) {\n        await this.fireStoreService\n          .getUserDocRefByUID(user.uid)\n          .set({\n            uid: user.uid,\n            displayName,\n            email: user.email,\n            photoURL: user.photoURL\n          } as User);\n      }\n\n      if (this.config.enableEmailVerification) {\n        await user.sendEmailVerification();\n      }\n\n      // Legacy fields\n      this.emailConfirmationSent = true;\n      this.emailToConfirm = credentials.email;\n\n      await this.handleSuccess(userCredential);\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  async sendNewVerificationEmail(): Promise<void | never> {\n    if (!this.user) {\n      return Promise.reject(new Error('No signed in user'));\n    }\n    return this.user.sendEmailVerification();\n  }\n\n  async signOut() {\n    try {\n      await this.afa.signOut();\n    } catch (error) {\n      this.notifyError(error);\n    }\n  }\n\n  /**\n   * Update the profile (name + photo url) of the authenticated ngx-auth-firebaseui-user in the\n   * firebase authentication feature (not in firestore)\n   *\n   * @param name - the new name of the authenticated ngx-auth-firebaseui-user\n   * @param photoURL - the new photo url of the authenticated ngx-auth-firebaseui-user\n   * @returns -\n   */\n  public updateProfile(name: string, photoURL: string): Promise<void> {\n    return this.afa.currentUser.then((user: User) => {\n      if (!photoURL) {\n        return user.updateProfile({displayName: name});\n      } else {\n        return user.updateProfile({displayName: name, photoURL});\n      }\n    });\n  }\n\n  public parseUserInfo(user: User): UserInfo {\n    return {\n      uid: user.uid,\n      displayName: user.displayName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      photoURL: user.photoURL,\n      providerId: user.providerData.length > 0 ? user.providerData[0].providerId : null\n    };\n  }\n\n  public getUserPhotoUrl(): Observable<string | null> {\n    return this._user$.pipe(\n      map((user: firebase.User | null) => {\n        if (!user) {\n          return null;\n        } else if (user.photoURL) {\n          return user.photoURL;\n        } else if (user.emailVerified) {\n          return this.getPhotoPath(Accounts.CHECK);\n        } else if (user.isAnonymous) {\n          return this.getPhotoPath(Accounts.OFF);\n        } else {\n          return this.getPhotoPath(Accounts.NONE);\n        }\n      })\n    );\n  }\n\n  public getPhotoPath(image: string): string {\n    return `assets/user/${image}.svg`;\n  }\n\n  public signInWithPhoneNumber() {\n    // todo: 3.1.18\n  }\n\n  async handleSuccess(userCredential: UserCredential) {\n    this.onSuccessEmitter.next(userCredential.user);\n    if (this.config.enableFirestoreSync) {\n      try {\n        await this.fireStoreService.updateUserData(this.parseUserInfo(userCredential.user));\n      } catch (e) {\n        console.error(`Error occurred while updating user data with firestore: ${e}`);\n      }\n    }\n    if (this.config.toastMessageOnAuthSuccess) {\n      const fallbackMessage = `Hello ${userCredential.user.displayName ? userCredential.user.displayName : ''}!`;\n      this.showToast(this.messageOnAuthSuccess || fallbackMessage);\n    }\n  }\n\n  handleError(error: any) {\n    this.notifyError(error);\n    console.error(error);\n  }\n\n  // Refresh user info. Can be useful for instance to get latest status regarding email verification.\n  reloadUserInfo() {\n    return this._user$.pipe(take(1)).subscribe((user: User | null) => user && user.reload());\n  }\n\n  // Search for an error message.\n  // Consumers of this library are given the possibility to provide a\n  // function in case they want to instrument message based on error properties.\n  getMessageOnAuthError(error: any) {\n    // tslint:disable-next-line:no-bitwise\n    return error.toString() || 'Sorry, something went wrong. Please retry later.';\n  }\n\n  // Show a toast using current snackbar config. If message is empty, no toast is displayed allowing to opt-out when needed.\n  // Default MatSnackBarConfig has no duration, meaning it stays visible forever.\n  // If that's the case, an action button is added to allow the end-user to dismiss the toast.\n  showToast(message: string) {\n    if (message) {\n      this.snackBar.open(message, this.matSnackBarConfig.duration ? null : 'OK');\n    }\n  }\n\n  showErrorToast(error: any) {\n    if (this.config.toastMessageOnAuthError) {\n      this.showToast(this.getMessageOnAuthError(error));\n    }\n  }\n\n  notifyError(error: any) {\n    this.onErrorEmitter.emit(error);\n    this.showErrorToast(error);\n  }\n\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthProcessService} from '../../services/auth-process.service';\n\ninterface VerifyEmailContext {\n  email: string;\n  goBackURL: string;\n  verifyEmailTitleText: string;\n  verifyEmailConfirmationText: string;\n  verifyEmailGoBackText: string;\n  messageOnEmailConfirmationSuccess: string;\n  messageOnError: string;\n}\n\nconst defaultTranslations = {\n  verifyEmailTitleText: 'Confirm your e-mail address!',\n  verifyEmailConfirmationText: 'A confirmation e-mail has been sent.' +\n    ' Check your inbox and click on the link \"Confirm my e-mail\" to confirm your e-mail address.',\n  verifyEmailGoBackText: 'Go back',\n  sendNewVerificationEmailText: 'Send new confirmation e-mail',\n  signOutText: 'Sign out',\n  messageOnEmailConfirmationSuccess: 'A new confirmation e-mail has been sent. Please check your inbox.',\n};\n\n@Component({\n  selector: 'ngx-auth-firebaseui-email-confirmation',\n  templateUrl: './email-confirmation.component.html',\n  styleUrls: ['./email-confirmation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EmailConfirmationComponent implements OnInit, OnChanges {\n\n  @Input() email: string;\n  @Input() goBackURL: string;\n  // i18n translations to use in default template\n  @Input() verifyEmailTitleText: string;\n  @Input() verifyEmailConfirmationText: string;\n  @Input() verifyEmailGoBackText: string;\n  @Input() sendNewVerificationEmailText: string;\n  @Input() signOutText: string;\n  @Input() messageOnEmailConfirmationSuccess: string;\n\n  // Template to use in place of default template\n  @Input() template: TemplateRef<any>;\n\n  @Output() signOut = new EventEmitter();\n\n  // Final template\n  verifyEmailTemplate: TemplateRef<any>;\n  // Context hash to use for verifyEmailTemplate.\n  verifyEmailContext: VerifyEmailContext;\n\n  isLoading: boolean;\n\n  @ViewChild('defaultVerifyEmail', {static: true}) defaultTemplate: TemplateRef<any>;\n\n  constructor(public authProcess: AuthProcessService, private router: Router, private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.verifyEmailTemplate && changes.verifyEmailTemplate.currentValue == null) {\n      this.verifyEmailTemplate = this.defaultTemplate;\n      console.log('ngOnChanges - defaultTemplate:', this.verifyEmailTemplate);\n    }\n    this.verifyEmailContext = this.createTemplateContext();\n  }\n\n  ngOnInit(): void {\n    if (!this.verifyEmailTemplate) {\n      console.log('ngOnInit - defaultTemplate');\n      this.verifyEmailTemplate = this.defaultTemplate;\n    }\n    this.verifyEmailContext = this.createTemplateContext();\n    console.log('verifyEmailTemplate:', this.verifyEmailTemplate);\n    console.log('verifyEmailContext:', this.verifyEmailContext);\n  }\n\n  async continue() {\n    try {\n      await this.authProcess.reloadUserInfo();\n      await this.router.navigate([this.goBackURL]);\n    } catch (error) {\n      this.authProcess.notifyError(error);\n    }\n  }\n\n  async sendNewVerificationEmail() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.sendNewVerificationEmail();\n      this.authProcess.showToast(this.verifyEmailContext.messageOnEmailConfirmationSuccess);\n    } catch (error) {\n      this.authProcess.notifyError(error);\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  private createTemplateContext(): any {\n    return {\n      email: this.email,\n      goBackURL: this.goBackURL,\n      verifyEmailTitleText: this.verifyEmailTitleText || defaultTranslations.verifyEmailTitleText,\n      verifyEmailConfirmationText: this.verifyEmailConfirmationText || defaultTranslations.verifyEmailConfirmationText,\n      verifyEmailGoBackText: this.verifyEmailGoBackText || defaultTranslations.verifyEmailGoBackText,\n      sendNewVerificationEmailText: this.sendNewVerificationEmailText || defaultTranslations.sendNewVerificationEmailText,\n      signOutText: this.signOutText || defaultTranslations.signOutText,\n      messageOnEmailConfirmationSuccess: this.messageOnEmailConfirmationSuccess || defaultTranslations.messageOnEmailConfirmationSuccess\n    };\n  }\n}\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LegalityDialogParams, LegalityDialogResult} from '../../interfaces';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-legality-dialog',\n  templateUrl: './legality-dialog.component.html',\n  styleUrls: ['./legality-dialog.component.scss']\n})\nexport class LegalityDialogComponent {\n\n  checkTOS: boolean;\n  checkPrivacyPolicy: boolean;\n\n  constructor(public dialogRef: MatDialogRef<LegalityDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: LegalityDialogParams) {\n  }\n\n  // tslint:disable-next-line:variable-name\n  private _disableConfirmActionButton = false;\n\n  get disableConfirmActionButton(): boolean {\n    if (this.data.tosUrl && this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !(this.checkTOS && this.checkPrivacyPolicy);\n    } else if (this.data.tosUrl && !this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !this.checkTOS;\n    } else if (!this.data.tosUrl && this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !this.checkPrivacyPolicy;\n    }\n    return this._disableConfirmActionButton;\n  }\n\n  closeDialog() {\n    const result: LegalityDialogResult = {\n      checked: !this.disableConfirmActionButton,\n      authProvider: this.data.authProvider\n    };\n    this.dialogRef.close(result);\n  }\n\n}\n","import {animate, animateChild, animation, query, stagger, state, style, transition, trigger, useAnimation} from '@angular/animations';\n\nconst customAnimation = animation(\n  [\n    style({\n      opacity: '{{opacity}}',\n      transform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})'\n    }),\n    animate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*'))\n  ],\n  {\n    params: {\n      duration: '200ms',\n      delay: '0ms',\n      opacity: '0',\n      scale: '1',\n      x: '0',\n      y: '0',\n      z: '0'\n    }\n  }\n);\n\nexport const NgxAuthFirebaseuiAnimations = [\n  trigger('animate', [transition('void => *', [useAnimation(customAnimation)])]),\n\n  trigger('animateStagger', [\n    state('50', style('*')),\n    state('100', style('*')),\n    state('200', style('*')),\n\n    transition('void => 50', query('@*', [stagger('50ms', [animateChild()])], {optional: true})),\n    transition('void => 100', query('@*', [stagger('100ms', [animateChild()])], {optional: true})),\n    transition('void => 200', query('@*', [stagger('200ms', [animateChild()])], {optional: true}))\n  ]),\n];\n","import {isPlatformBrowser} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\n\n// ANGULAR MATERIAL\nimport {MatTabChangeEvent, MatTabGroup} from '@angular/material/tabs';\nimport {ThemePalette} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\n\n// ANGULAR FIRE\nimport {AngularFireAuth} from '@angular/fire/auth';\n\n// Third PARTY\nimport {MatPasswordStrengthComponent} from '@angular-material-extensions/password-strength';\n\n// RXJS\nimport {Subscription} from 'rxjs';\n\nimport {LegalityDialogComponent, Theme} from '..';\nimport {LegalityDialogParams, LegalityDialogResult, NgxAuthFirebaseUIConfig} from '../../interfaces';\nimport { AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {NgxAuthFirebaseUIConfigToken} from '../../tokens';\n\n\nexport const EMAIL_REGEX = new RegExp(['^(([^<>()[\\\\]\\\\\\.,;:\\\\s@\\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\.,;:\\\\s@\\\"]+)*)',\n  '|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.',\n  '[0-9]{1,3}\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+',\n  '[a-zA-Z]{2,}))$'].join(''));\n\n// tslint:disable-next-line:max-line-length\nexport const PHONE_NUMBER_REGEX = new RegExp(['^[+]{0,1}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\.]{0,1}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]{4,12}$'].join(''));\n\n@Component({\n  selector: 'ngx-auth-firebaseui',\n  templateUrl: 'auth.component.html',\n  styleUrls: ['auth.component.scss'],\n  animations: NgxAuthFirebaseuiAnimations,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AuthComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n\n  @ViewChild(MatTabGroup, {static: false}) matTabGroup: MatTabGroup;\n  @ViewChild(MatPasswordStrengthComponent, {static: false}) passwordStrength: MatPasswordStrengthComponent;\n\n  isLoading: boolean;\n  //  google, facebook, twitter, github as array or all as one single string\n  @Input() providers: AuthProvider[] | AuthProvider = AuthProvider.ALL;\n  @Input() providersTheme: Theme; // Classic, Stroked, etc.\n\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() tabIndex: number | null;\n  @Input() registrationEnabled = true;\n  @Input() resetPasswordEnabled = true;\n  @Input() guestEnabled = true;\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n  @Input() goBackURL: string;\n  @Input() messageOnAuthSuccess: string;\n  @Input() messageOnAuthError: string;\n  @Input() messageOnEmailConfirmationSuccess: string;\n\n  // Events\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSuccess: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onError: any;\n  @Output() selectedTabChange: EventEmitter<MatTabChangeEvent> = new EventEmitter();\n\n  // Password strength api\n  @Input() enableLengthRule = true;\n  @Input() enableLowerCaseLetterRule = true;\n  @Input() enableUpperCaseLetterRule = true;\n  @Input() enableDigitRule = true;\n  @Input() enableSpecialCharRule = true;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() customValidator: RegExp;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onStrengthChanged: EventEmitter<number> = new EventEmitter();\n\n  // Verify email template to use in place of default template.\n  // See email-confirmation component\n  @Input() verifyEmailTemplate: TemplateRef<any>;\n\n  // i18n translations to use in default template for email verification.\n  // See email-confirmation component\n  @Input() verifyEmailTitleText: string;\n  @Input() verifyEmailConfirmationText: string;\n  @Input() verifyEmailGoBackText: string;\n  @Input() sendNewVerificationEmailText: string;\n  @Input() signOutText = 'Sign out';\n\n  // Customize the text\n  // Reset Password Tab\n  @Input() resetPasswordTabText = 'Reset e-mail address to password';\n  @Input() resetPasswordInputText = 'Reset e-mail address to password';\n  @Input() resetPasswordErrorRequiredText = 'E-mail is required to reset the password!';\n  @Input() resetPasswordErrorPatternText = 'Please enter a valid e-mail address';\n  @Input() resetPasswordActionButtonText = 'Reset';\n  @Input() resetPasswordInstructionsText = 'Reset requested. Check your e-mail instructions.';\n\n  // SignIn Tab\n  @Input() signInTabText = 'Sign in';\n  @Input() signInCardTitleText = 'Signing in';\n  @Input() loginButtonText = 'Log In';\n  @Input() forgotPasswordButtonText = 'Forgot Password ?';\n\n  // Common\n  @Input() nameText = 'Name';\n  @Input() nameErrorRequiredText = 'Name is required';\n  @Input() nameErrorMinLengthText = 'The name is too short!';\n  @Input() nameErrorMaxLengthText = 'The name is too long!';\n\n  @Input() emailText = 'E-mail';\n  @Input() emailErrorRequiredText = 'E-mail is required';\n  @Input() emailErrorPatternText = 'Please enter a valid e-mail address';\n\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n  @Input() passwordErrorMinLengthText = 'The password is too short!';\n  @Input() passwordErrorMaxLengthText = 'The password is too long!';\n\n  // Register Tab\n  @Input() registerTabText = 'Register';\n  @Input() registerCardTitleText = 'Registration';\n  @Input() registerButtonText = 'Register';\n  @Input() guestButtonText = 'continue as guest';\n\n  // email confirmation component\n  @Input() emailConfirmationTitle = 'Confirm your e-mail address!';\n  // tslint:disable-next-line:max-line-length\n  @Input() emailConfirmationText = `A confirmation e-mail has been sent to you. Check your inbox and click on the link \"Confirm my e-mail\" to confirm your e-mail address.`;\n\n  authProvider = AuthProvider;\n  passwordResetWished: boolean;\n\n  public signInFormGroup: FormGroup;\n  public signUpFormGroup: FormGroup;\n  public resetPasswordFormGroup: FormGroup;\n\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  passReset = false;\n  dialogRef: MatDialogRef<LegalityDialogComponent>;\n\n  authProviders = AuthProvider;\n\n  signInEmailFormControl: AbstractControl;\n  sigInPasswordFormControl: AbstractControl;\n\n  sigUpNameFormControl: AbstractControl;\n  sigUpEmailFormControl: AbstractControl;\n  sigUpPasswordFormControl: AbstractControl;\n  sigUpPasswordConfirmationFormControl: AbstractControl;\n  resetPasswordEmailFormControl: AbstractControl;\n\n  constructor(\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken)) public config: NgxAuthFirebaseUIConfig,\n    public auth: AngularFireAuth,\n    public authProcess: AuthProcessService,\n    public dialog: MatDialog,\n    private activatedRoute: ActivatedRoute,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  public ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n    this.min = this.min != null ? Math.max(this.min, this.config.passwordMinLength) : this.config.passwordMinLength;\n    this.max = this.max != null ? Math.min(this.max, this.config.passwordMaxLength) : this.config.passwordMaxLength;\n\n    this.goBackURL = this.chooseBackUrl();\n\n    this.updateAuthSnackbarMessages();\n    // auth form's initialization\n    this._initSignInFormGroupBuilder();\n    this._initSignUpFormGroupBuilder();\n    this._initResetPasswordFormGroupBuilder();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.passwordStrength) {\n      this.passwordStrength.onStrengthChanged.subscribe((strength: number) => {\n        this.onStrengthChanged.emit(strength);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.messageOnAuthSuccess || changes.messageOnAuthError) {\n      this.updateAuthSnackbarMessages();\n    }\n    if (changes.min) {\n      this.min = this.min != null ? Math.max(this.min, this.config.passwordMinLength) : this.config.passwordMinLength;\n    }\n    if (changes.max) {\n      this.max = this.max != null ? Math.min(this.max, this.config.passwordMaxLength) : this.config.passwordMaxLength;\n    }\n    if (changes.goBackURL) {\n      this.goBackURL = this.chooseBackUrl();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.onErrorSubscription) {\n      this.onErrorSubscription.unsubscribe();\n    }\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.selectedTabChange.emit(event);\n    this.tabIndex = event.index;\n  }\n\n  async signOut() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signOut();\n    } finally {\n      this.isLoading = false;\n      this.tabIndex = 0;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  async signIn() {\n    if (!this.signInFormGroup.valid) {\n      return;\n    }\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signInWith(this.authProviders.EmailAndPassword, {\n        email: this.signInFormGroup.value.email,\n        password: this.signInFormGroup.value.password\n      });\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  updateAuthSnackbarMessages(): void {\n    this.authProcess.messageOnAuthSuccess = this.messageOnAuthSuccess;\n    this.authProcess.messageOnAuthError = this.messageOnAuthError;\n  }\n\n  createForgotPasswordTab() {\n    this.passwordResetWished = true;\n    this.tabIndex = 2;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  processLegalSignUP(authProvider?: AuthProvider) {\n    if (this.tosUrl || this.privacyPolicyUrl) {\n      const params: LegalityDialogParams = {\n        tosUrl: this.tosUrl,\n        privacyPolicyUrl: this.privacyPolicyUrl,\n        authProvider\n      };\n\n      this.dialogRef = this.dialog.open(LegalityDialogComponent, {data: params});\n      this.dialogRef.afterClosed().subscribe((result: LegalityDialogResult) => {\n        if (result && result.checked) {\n          this._afterSignUpMiddleware(result.authProvider).then(() => this.signUpFormGroup.reset());\n        }\n        this.dialogRef = null;\n      });\n    } else {\n      this._afterSignUpMiddleware(authProvider).then(() => this.signUpFormGroup.reset());\n    }\n  }\n\n  async signUp() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      return await this.authProcess.signUp(\n        this.signUpFormGroup.value.name,\n        {\n          email: this.signUpFormGroup.value.email,\n          password: this.signUpFormGroup.value.password\n        }\n      );\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  async signUpAnonymously() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signInWith(this.authProvider.ANONYMOUS);\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n\n  resetPassword() {\n    this.authProcess.resetPassword(this.resetPasswordEmailFormControl.value)\n      .then(() => {\n        this.passReset = true;\n        // this.tabIndex = 2;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  private chooseBackUrl() {\n    return this.activatedRoute.snapshot.queryParams.redirectUrl || this.goBackURL || '/';\n  }\n\n  private _initSignInFormGroupBuilder() {\n    this.signInFormGroup = new FormGroup({});\n    this.signInFormGroup.registerControl('email', this.signInEmailFormControl = new FormControl('',\n      [\n        Validators.required,\n        Validators.pattern(EMAIL_REGEX)\n      ]));\n    this.signInFormGroup.registerControl('password', this.sigInPasswordFormControl = new FormControl('',\n      [\n        Validators.required,\n        Validators.minLength(this.min),\n        Validators.maxLength(this.max)\n      ]));\n  }\n\n  private _initSignUpFormGroupBuilder() {\n    this.signUpFormGroup = new FormGroup({\n      name: this.sigUpNameFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.minLength(this.config.nameMinLength),\n          Validators.maxLength(this.config.nameMaxLength)\n        ]),\n      email: this.sigUpEmailFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.pattern(EMAIL_REGEX)\n        ]),\n      password: this.sigUpPasswordFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.minLength(this.min),\n          Validators.maxLength(this.max),\n        ])\n    });\n  }\n\n  private _initResetPasswordFormGroupBuilder() {\n    this.resetPasswordFormGroup = new FormGroup({\n      email: this.resetPasswordEmailFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.pattern(EMAIL_REGEX)\n        ])\n    });\n  }\n\n  private _afterSignUpMiddleware(authProvider?: AuthProvider) {\n    if (authProvider === this.authProvider.ANONYMOUS) {\n      return this.signUpAnonymously();\n    }\n    return this.signUp();\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {User} from 'firebase';\nimport {Observable} from 'rxjs';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserComponent} from '..';\n\nexport interface LinkMenuItem {\n  text: string;\n  icon?: string;\n  // tslint:disable-next-line:ban-types\n  callback?: Function;\n}\n\n@Component({\n  selector: 'ngx-auth-firebaseui-avatar',\n  templateUrl: './ngx-auth-firebaseui-avatar.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-avatar.component.scss']\n})\nexport class NgxAuthFirebaseuiAvatarComponent implements OnInit {\n\n  @Input()\n  layout: 'default' | 'simple' = 'default';\n\n  @Input()\n  canLogout = true;\n\n  @Input()\n  links: LinkMenuItem[];\n\n  @Input()\n  canViewAccount = true;\n\n  @Input()\n  canDeleteAccount = true;\n\n  @Input()\n  canEditAccount = true;\n\n  @Input()\n  textProfile = 'Profile';\n\n  @Input()\n  textSignOut = 'Sign Out';\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onSignOut: EventEmitter<void> = new EventEmitter();\n\n  user: User;\n  user$: Observable<User | null>;\n  displayNameInitials: string | null;\n\n  constructor(public afa: AngularFireAuth,\n              public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.user$ = this.afa.user;\n    this.user$.subscribe((user: User) => {\n      this.user = user;\n      this.displayNameInitials = user ? this.getDisplayNameInitials(user.displayName) : null;\n    });\n  }\n\n  getDisplayNameInitials(displayName: string | null): string | null {\n    if (!displayName) {\n      return null;\n    }\n    const initialsRegExp: RegExpMatchArray = displayName.match(/\\b\\w/g) || [];\n    const initials = ((initialsRegExp.shift() || '') + (initialsRegExp.pop() || '')).toUpperCase();\n    return initials;\n  }\n\n  openProfile() {\n    const dialogRef = this.dialog.open(UserComponent);\n    const instance = dialogRef.componentInstance;\n    instance.canDeleteAccount = this.canDeleteAccount;\n    instance.canEditAccount = this.canEditAccount;\n  }\n\n  async signOut() {\n    try {\n      await this.afa.signOut();\n      // Sign-out successful.\n      this.onSignOut.emit();\n    } catch (e) {\n      // An error happened.\n      console.error('An error happened while signing out!', e);\n    }\n  }\n}\n","import {Component, EventEmitter, Inject, Input, OnInit, Output, PLATFORM_ID, ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {Subscription} from 'rxjs';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {isPlatformBrowser} from '@angular/common';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {ThemePalette} from '@angular/material/core';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-login',\n  templateUrl: './ngx-auth-firebaseui-login.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-login.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class NgxAuthFirebaseuiLoginComponent implements OnInit {\n\n  @Input() logoUrl: string;\n  @Input() providers: string[] | string = AuthProvider.ALL; //  google, facebook, twitter, github as array or all as one single string\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() registrationEnabled = true;\n  @Input() resetPasswordEnabled = true;\n  @Input() messageOnAuthSuccess: string;\n  @Input() messageOnAuthError: string;\n\n  // i18n\n  @Input() titleText = 'LOGIN TO YOUR ACCOUNT';\n  @Input() rememberMeText = 'Remember Me';\n  @Input() loginButtonText = 'LOGIN';\n  @Input() orLabelText = 'OR';\n  @Input() forgotPasswordText = 'Forgot Password?';\n  @Input() dontHaveAnAccountText = 'Don\\'t have an account?';\n  @Input() createAccountButtonText = 'Create an account';\n\n  // i18n email\n  @Input() emailText = 'Email';\n  @Input() emailErrorRequiredText = 'Email is required';\n  @Input() emailErrorPatternText = 'Please enter a valid email address';\n\n  // i18n password\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n\n  // Events\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSuccess: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onError: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onCreateAccountRequested: EventEmitter<void> = new EventEmitter<void>();\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onResetPasswordRequested: EventEmitter<void> = new EventEmitter<void>();\n\n  loginForm: FormGroup;\n  authProviders = AuthProvider;\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  constructor(\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public authProcess: AuthProcessService,\n    private formBuilder: FormBuilder) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  get colorAccent(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'accent';\n  }\n\n  ngOnInit() {\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n\n    this.updateAuthSnackbarMessages();\n\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  public updateAuthSnackbarMessages(): void {\n    this.authProcess.messageOnAuthSuccess = this.messageOnAuthSuccess;\n    this.authProcess.messageOnAuthError = this.messageOnAuthError;\n  }\n\n  async login() {\n    return await this.authProcess.signInWith(this.authProviders.EmailAndPassword,\n      {\n        email: this.loginForm.controls.email.value,\n        password: this.loginForm.controls.password.value\n      }\n    );\n  }\n}\n","import {Component, EventEmitter, Inject, Input, OnDestroy, OnInit, Output, PLATFORM_ID, ViewEncapsulation} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\nimport {Subject, Subscription} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {AuthProcessService} from '../../services/auth-process.service';\nimport {isPlatformBrowser} from '@angular/common';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {ThemePalette} from '@angular/material/core';\n\nexport const confirmPasswordValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  if (!control.parent || !control) {\n    return null;\n  }\n\n  const password = control.parent.get('password');\n  const passwordConfirm = control.parent.get('passwordConfirm');\n\n  if (!password || !passwordConfirm) {\n    return null;\n  }\n\n  if (passwordConfirm.value === '') {\n    return null;\n  }\n\n  if (password.value === passwordConfirm.value) {\n    return null;\n  }\n\n  return {passwordsNotMatching: true};\n};\n\n@Component({\n  selector: 'ngx-auth-firebaseui-register',\n  templateUrl: './ngx-auth-firebaseui-register.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-register.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class NgxAuthFirebaseuiRegisterComponent implements OnInit, OnDestroy {\n\n  @Input() logoUrl: string;\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n\n  // i18n common\n  @Input() titleText = 'CREATE AN ACCOUNT';\n  @Input() readAndAcceptText = 'I read and accept the';\n  @Input() termsAndConditionsText = 'terms and conditions';\n  @Input() privacyPolicyText = 'privacy policy';\n  @Input() createAccountButtonText = 'CREATE AN ACCOUNT';\n  @Input() alreadyHaveAccountText = 'Already have an account?';\n  @Input() loginButtonText = 'LOGIN';\n\n  // i18n name\n  @Input() nameText = 'Name';\n  @Input() nameErrorRequiredText = 'Name is required';\n\n  // i18n email\n  @Input() emailText = 'Email';\n  @Input() emailErrorRequiredText = 'Email is required';\n  @Input() emailErrorPatternText = 'Please enter a valid email address';\n\n  // i18n password\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n  @Input() passwordConfirmationText = 'Password Confirmation';\n  @Input() passwordConfirmationErrorRequiredText = 'Password confirmation is required';\n  @Input() passwordErrorMatchText = 'Password must match';\n\n  // Events\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSuccess: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onError: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onLoginRequested: EventEmitter<void> = new EventEmitter<void>();\n\n  registerForm: FormGroup;\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  // Private\n  private unsubscribeAll: Subject<any>;\n\n  // tslint:disable-next-line:ban-types\n  constructor(@Inject(PLATFORM_ID) private platformId: Object,\n              private formBuilder: FormBuilder,\n              public authProcess: AuthProcessService) {\n    // Configure the layout\n\n    // Set the private defaults\n    this.unsubscribeAll = new Subject();\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  get colorAccent(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'accent';\n  }\n\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      passwordConfirm: ['', [Validators.required, confirmPasswordValidator]],\n      tos: [''],\n      privacyPolicy: ['']\n    });\n\n    // If tos or privacy policy url set, ensure that the two form items are required\n    if (this.tosUrl) {\n      this.registerForm.controls.tos.setValidators(Validators.requiredTrue);\n    }\n\n    if (this.privacyPolicyUrl) {\n      this.registerForm.controls.privacyPolicy.setValidators(Validators.requiredTrue);\n    }\n\n    // Update the validity of the 'passwordConfirm' field\n    // when the 'password' field changes\n    this.registerForm\n      .controls\n      .password\n      .valueChanges.pipe(takeUntil(this.unsubscribeAll))\n      .subscribe(() => {\n        this.registerForm.controls.passwordConfirm.updateValueAndValidity();\n      });\n  }\n\n  /**\n   * On destroy\n   */\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this.unsubscribeAll.next();\n    this.unsubscribeAll.complete();\n  }\n\n  async createAccount() {\n    return await this.authProcess.signUp(\n      this.registerForm.controls.name.value,\n      {\n        email: this.registerForm.controls.email.value,\n        password: this.registerForm.controls.password.value\n      }\n    );\n  }\n}\n","import {Component, EventEmitter, forwardRef, Inject, Input, Output} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {User} from 'firebase';\nimport {EMAIL_REGEX, PHONE_NUMBER_REGEX} from '..';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {NgxAuthFirebaseUIConfigToken} from '../../tokens';\nimport {NgxAuthFirebaseUIConfig} from '../../interfaces';\nimport { AuthProcessService } from '../../services/auth-process.service';\nimport { FirestoreSyncService } from '../../services/firestore-sync.service';\nimport { map, take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\n  @Input()\n  editMode: boolean;\n\n  @Input()\n  canLogout = true;\n\n  @Input()\n  canEditAccount = true;\n\n  @Input()\n  canDeleteAccount = true;\n\n  @Input()\n  appearance: MatFormFieldAppearance;\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onSignOut: EventEmitter<void> = new EventEmitter();\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onAccountEdited: EventEmitter<void> = new EventEmitter();\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onAccountDeleted: EventEmitter<void> = new EventEmitter();\n\n  updateFormGroup: FormGroup;\n  updateNameFormControl: FormControl;\n  updateEmailFormControl: FormControl;\n  updatePhoneNumberFormControl: FormControl;\n\n  constructor(\n    public auth: AngularFireAuth,\n    public authProcess: AuthProcessService,\n    private fireStoreService: FirestoreSyncService,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken)) public config: NgxAuthFirebaseUIConfig\n  ) {\n  }\n\n  changeEditMode() {\n    if (this.editMode) {\n      this.reset();\n      this.editMode = false;\n    } else {\n      this.initUpdateFormGroup().subscribe((updateFormGroup: FormGroup) => {\n        this.updateFormGroup = updateFormGroup;\n        this.editMode = true;\n      });\n    }\n  }\n\n  reset() {\n    this.updateFormGroup.reset();\n    this.updateFormGroup.disable();\n    this.updateFormGroup = null;\n  }\n\n  async save() {\n    if (this.updateFormGroup.dirty) {\n      this.editMode = false;\n      const user = this.authProcess.user;\n      // ngx-auth-firebaseui-user.updateProfile()\n      // ngx-auth-firebaseui-user.updateEmail()\n      // console.log('form = ', this.updateFormGroup);\n\n      const snackBarMsg: string[] = [];\n\n      try {\n        if (this.updateNameFormControl.dirty) {\n          await user.updateProfile({displayName: this.updateNameFormControl.value});\n          snackBarMsg.push(`your name has been updated to ${user.displayName}`);\n        }\n\n        if (this.updateEmailFormControl.dirty) {\n          await user.updateEmail(this.updateEmailFormControl.value);\n          snackBarMsg.push(`your email has been updated to ${user.email}`);\n        }\n\n        if (this.updatePhoneNumberFormControl.dirty) {\n          await user.updatePhoneNumber(this.updatePhoneNumberFormControl.value);\n          console.log('phone number = ', this.updatePhoneNumberFormControl.value);\n          snackBarMsg.push(`your phone number has been updated to ${user.phoneNumber}`);\n        }\n\n        if (this.config.enableFirestoreSync) {\n          await this.fireStoreService.updateUserData(this.authProcess.parseUserInfo(user));\n        }\n\n      } catch (error) {\n        this.authProcess.showToast(error && error.message ? error.message : error);\n        console.error(error);\n      }\n\n\n      if (snackBarMsg.length > 0) {\n        this.authProcess.showToast(snackBarMsg.join('\\\\n'));\n      }\n      this.updateFormGroup.reset();\n    }\n  }\n\n  signOut() {\n    this.auth.signOut()\n      .then(() => this.onSignOut.emit())\n      .catch(e => console.error('An error happened while signing out!', e));\n  }\n\n  /**\n   * Delete the account of the current firebase ngx-auth-firebaseui-user\n   *\n   * On Success, emit the <onAccountDeleted> event and toast a msg!#\n   * Otherwise, log the and toast and error msg!\n   *\n   */\n  async deleteAccount() {\n    try {\n      const user = this.authProcess.user;\n\n      // await this.authProcess.deleteAccount();\n      await this.authProcess.user.delete();\n      // if (this.config.enableFirestoreSync) {\n      await this.fireStoreService.deleteUserData(user.uid);\n      // }\n      this.onAccountDeleted.emit();\n      this.editMode = false;\n      console.log('Your account has been successfully deleted!');\n      this.authProcess.showToast('Your account has been successfully deleted!');\n    } catch (error) {\n      console.log('Error while delete user account', error);\n      this.authProcess.showToast(`Error occurred while deleting your account: ${error.message}`);\n    }\n  }\n\n  protected initUpdateFormGroup(): Observable<FormGroup> {\n    return this.authProcess.user$.pipe(\n      take(1),\n      map((currentUser: User) => {\n      const updateFormGroup = new FormGroup({\n        name: this.updateNameFormControl = new FormControl(\n          {value: currentUser.displayName, disabled: this.editMode},\n          [\n            Validators.required,\n            Validators.minLength(this.config.nameMinLength),\n            Validators.maxLength(this.config.nameMaxLength)\n          ]\n        ),\n\n        email: this.updateEmailFormControl = new FormControl(\n          {value: currentUser.email, disabled: this.editMode},\n          [\n            Validators.required,\n            Validators.pattern(EMAIL_REGEX)\n          ]),\n\n        phoneNumber: this.updatePhoneNumberFormControl = new FormControl(\n          {value: currentUser.phoneNumber, disabled: this.editMode},\n          [Validators.pattern(PHONE_NUMBER_REGEX)])\n      });\n\n      updateFormGroup.enable();\n      return updateFormGroup;\n      })\n    );\n  }\n}\n","import {Component, Input, Output} from '@angular/core';\nimport {AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {LegalityDialogComponent} from '..';\nimport {LegalityDialogParams, LegalityDialogResult} from '../../interfaces';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\nexport enum Theme {\n  DEFAULT = 'default',\n  CLASSIC = 'classic',\n  STROKED = 'stroked',\n  FAB = 'fab',\n  MINI_FAB = 'mini-fab',\n  RAISED = 'raised',\n}\n\nexport enum Layout {\n  ROW = 'row',\n  COLUMN = 'column'\n}\n\n@Component({\n  selector: 'ngx-auth-firebaseui-providers',\n  templateUrl: 'auth.providers.component.html',\n  styleUrls: ['auth.providers.component.scss'],\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class AuthProvidersComponent {\n\n  @Input() theme: Theme; // theme: string = Theme.DEFAULT;\n  @Input() layout: string = Layout.ROW;\n  @Input() providers: AuthProvider[] | AuthProvider = AuthProvider.ALL; //  google, facebook, twitter, github, microsoft, yahoo\n\n  @Output() onSuccess: any;\n  @Output() onError: any;\n\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n  dialogRef: MatDialogRef<LegalityDialogComponent>;\n\n  themes = Theme;\n  authProvider = AuthProvider;\n\n  constructor(public authProcess: AuthProcessService, public dialog: MatDialog) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  processLegalSignUP(authProvider?: AuthProvider) {\n    if (this.tosUrl || this.privacyPolicyUrl) {\n      const params: LegalityDialogParams = {\n        tosUrl: this.tosUrl,\n        privacyPolicyUrl: this.privacyPolicyUrl,\n        authProvider\n      };\n\n      this.dialogRef = this.dialog.open(LegalityDialogComponent, {data: params});\n      this.dialogRef.afterClosed().subscribe((result: LegalityDialogResult) => {\n        if (result && result.checked) {\n          // this._afterSignUpMiddleware(result.authProvider).then(() => this.signUpFormGroup.reset());\n          this.authProcess.signInWith(authProvider);\n        }\n        this.dialogRef = null;\n      });\n    } else {\n      // this._afterSignUpMiddleware(authProvider).then(() => this.signUpFormGroup.reset());\n      this.authProcess.signInWith(authProvider);\n    }\n  }\n\n}\n","// import * as firebase from 'firebase';\n\nexport interface NgxAuthFirebaseUIConfig {\n  // authNextURL?: string, // popup or redirect\n  // tosUrl?: string, // term of services url\n  // ppUrl?: string, // privacy policy url\n  // authProviders?: Array<AuthProvider>,\n  // languageCode?: string, // todo: 28.3.18\n  authGuardFallbackURL?: string;\n  authGuardLoggedInURL?: string;\n  enableFirestoreSync?: boolean;\n\n  // Toasts\n  toastMessageOnAuthSuccess?: boolean;\n  toastMessageOnAuthError?: boolean;\n\n  // Password length min/max in forms independently of each componenet min/max.\n  // `min/max` input parameters in components should be within this range.\n  passwordMaxLength?: number;\n  passwordMinLength?: number;\n\n  // Same as password but for the name\n  nameMaxLength?: number;\n  nameMinLength?: number;\n\n  // If set, sign-in/up form is not available until email has been verified.\n  // Plus protected routes are still protected even though user is connected.\n  guardProtectedRoutesUntilEmailIsVerified?: boolean;\n\n  // Control whether or not email verification is used\n  enableEmailVerification?: boolean;\n}\n\nexport const defaultAuthFirebaseUIConfig: NgxAuthFirebaseUIConfig = {\n  // authMethod: 'redirect',\n  // authProviders: [new GoogleAuthProvider(), new FacebookAuthProvider(), new TwitterAuthProvider(), new GithubAuthProvider()],\n  enableFirestoreSync: true,\n  toastMessageOnAuthSuccess: true,\n  toastMessageOnAuthError: true,\n  authGuardFallbackURL: '/',\n  authGuardLoggedInURL: '/',\n\n  // Password length min/max in forms independently of each componenet min/max.\n  // `min/max` input parameters in components should be within this range.\n  passwordMaxLength: 60,\n  passwordMinLength: 8,\n\n  // Same as password but for the name\n  nameMaxLength: 50,\n  nameMinLength: 2,\n\n  // If set, sign-in/up form is not available until email has been verified.\n  // Plus protected routes are still protected even though user is connected.\n  guardProtectedRoutesUntilEmailIsVerified: true,\n\n  // Default to email verification on\n  enableEmailVerification: true\n};\n\n// Merge default config with user provided config.\nexport function ngxAuthFirebaseUIConfigFactory(userProvidedConfig: NgxAuthFirebaseUIConfig): NgxAuthFirebaseUIConfig {\n  return Object.assign({}, defaultAuthFirebaseUIConfig, userProvidedConfig);\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {NgxAuthFirebaseUIConfig} from '../interfaces';\nimport {NgxAuthFirebaseUIConfigToken} from '../tokens';\nimport {AuthProcessService} from '../services/auth-process.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedInGuard implements CanActivate {\n  constructor(\n    @Inject(NgxAuthFirebaseUIConfigToken)\n    private config: NgxAuthFirebaseUIConfig,\n    private router: Router,\n    private authProcess: AuthProcessService\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.authProcess.afa.user.pipe(\n      map(user => {\n        if (user) {\n          if (this.config.guardProtectedRoutesUntilEmailIsVerified && !user.emailVerified && !user.isAnonymous) {\n            if (this.config.authGuardFallbackURL) {\n              this.router.navigate([`${this.config.authGuardFallbackURL}`], {queryParams: {redirectUrl: state.url}});\n            }\n            return false;\n          } else {\n            return true;\n          }\n        } else {\n          if (this.config.authGuardFallbackURL) {\n            this.router.navigate([`/${this.config.authGuardFallbackURL}`], {queryParams: {redirectUrl: state.url}});\n          }\n          return false;\n        }\n      })\n    );\n  }\n}\n","// @angular/*\nimport {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n// @angular/fire\nimport {FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseAppConfig} from '@angular/fire';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\n// @angular/material\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule, MatIconRegistry} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {MatPasswordStrengthModule} from '@angular-material-extensions/password-strength';\n\n\nimport {NgxAuthFirebaseuiLoginComponent} from './components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component';\nimport {NgxAuthFirebaseuiRegisterComponent} from './components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component';\n\n\nimport {DomSanitizer} from '@angular/platform-browser';\n// ngx-auth-firebaseui\n// components\nimport {AuthComponent} from './components/ngx-auth-firebaseui/auth.component';\nimport {UserComponent} from './components/ngx-auth-firebaseui-user/user.component';\nimport {AuthProvidersComponent} from './components/providers/auth.providers.component';\nimport {EmailConfirmationComponent} from './components/email-confirmation/email-confirmation.component';\nimport {NgxAuthFirebaseUIConfig, ngxAuthFirebaseUIConfigFactory} from './interfaces/config.interface';\nimport {NgxAuthFirebaseuiAvatarComponent} from './components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component';\nimport {LegalityDialogComponent} from './components/legality-dialog/legality-dialog.component';\n// guards\nimport {LoggedInGuard} from './guards/logged-in.guard';\n// services\nimport {FirestoreSyncService} from './services/firestore-sync.service';\nimport {AuthProcessService} from './services/auth-process.service';\nimport {NgxAuthFirebaseUIConfigToken, UserProvidedConfigToken} from './tokens';\n// interfaces\n// ###################################################################################################\n// Export module's public API\n// components\nexport {LegalityDialogComponent} from './components/legality-dialog/legality-dialog.component';\nexport {LinkMenuItem, NgxAuthFirebaseuiAvatarComponent} from './components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component';\nexport {UserComponent} from './components/ngx-auth-firebaseui-user/user.component';\nexport {AuthComponent} from './components/ngx-auth-firebaseui/auth.component';\nexport {AuthProvidersComponent, Layout, Theme} from './components/providers/auth.providers.component';\nexport {NgxAuthFirebaseuiLoginComponent} from './components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component';\nexport {NgxAuthFirebaseuiRegisterComponent} from './components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component';\n\n\n// guards\nexport {LoggedInGuard} from './guards/logged-in.guard';\n// interfaces\nexport {NgxAuthFirebaseUIConfig} from './interfaces/config.interface';\n// services\nexport {AuthProcessService, AuthProvider} from './services/auth-process.service';\nexport {FirestoreSyncService} from './services/firestore-sync.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // HTTP\n    RouterModule,\n    HttpClientModule,\n    // FLEX_LAYOUT\n    FlexLayoutModule,\n    // FORMS\n    FormsModule,\n    ReactiveFormsModule,\n    // MATERIAL2\n    MatTabsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatMenuModule,\n    // ANGULAR MATERIAL EXTENSIONS\n    MatPasswordStrengthModule,\n    // ANGULARFIRE2\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n  ],\n  exports: [\n    AuthComponent,\n    UserComponent,\n    NgxAuthFirebaseuiAvatarComponent,\n    AuthProvidersComponent,\n    EmailConfirmationComponent,\n    // LoggedInGuard,\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    NgxAuthFirebaseuiLoginComponent,\n    NgxAuthFirebaseuiRegisterComponent\n  ],\n  declarations: [\n    AuthComponent,\n    UserComponent,\n    NgxAuthFirebaseuiAvatarComponent,\n    AuthProvidersComponent,\n    EmailConfirmationComponent,\n    LegalityDialogComponent,\n    NgxAuthFirebaseuiLoginComponent,\n    NgxAuthFirebaseuiRegisterComponent\n  ],\n  entryComponents: [\n    UserComponent,\n    LegalityDialogComponent\n  ]\n})\nexport class NgxAuthFirebaseUIModule {\n  constructor(private iconRegistry: MatIconRegistry, private sanitizer: DomSanitizer, auth: AuthProcessService) {\n    auth.listenToUserEvents();\n    this.registerProviderIcons();\n  }\n\n  static forRoot(\n    configFactory: FirebaseAppConfig,\n    appNameFactory: () => string | undefined = () => undefined,\n    config: NgxAuthFirebaseUIConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxAuthFirebaseUIModule,\n      providers:\n        [\n          {\n            provide: FIREBASE_OPTIONS,\n            useValue: configFactory\n          },\n          {\n            provide: FIREBASE_APP_NAME,\n            useFactory: appNameFactory\n          },\n          {provide: UserProvidedConfigToken, useValue: config},\n          {\n            provide: NgxAuthFirebaseUIConfigToken,\n            useFactory: ngxAuthFirebaseUIConfigFactory,\n            deps: [UserProvidedConfigToken]\n          },\n          AuthProcessService,\n          FirestoreSyncService,\n          LoggedInGuard\n        ]\n    };\n  }\n\n  registerProviderIcons() {\n    this.iconRegistry\n      .addSvgIcon('google', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/google.svg'))\n      .addSvgIcon('apple', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/apple.svg'))\n      .addSvgIcon('google-colored', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/google.svg'))\n      .addSvgIcon('facebook', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/facebook.svg'))\n      .addSvgIcon('twitter', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/twitter.svg'))\n      .addSvgIcon('github', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/github-circle.svg'))\n      .addSvgIcon('microsoft', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/microsoft.svg'))\n      .addSvgIcon('yahoo', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/yahoo.svg'))\n      .addSvgIcon('phone', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/phone.svg'));\n  }\n}\n","/*\n * Public API Surface of ngx-auth-firebaseui\n */\n\nexport * from './lib/components';\nexport * from './lib/enums';\nexport * from './lib/interfaces';\nexport * from './lib/guards';\nexport * from './lib/tokens';\nexport * from './lib/services/auth-process.service';\nexport * from './lib/services/firestore-sync.service';\nexport * from './lib/ngx-auth-firebaseui.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NgxAuthFirebaseuiAnimations as ɵd} from './lib/animations';\nexport {EmailConfirmationComponent as ɵe} from './lib/components/email-confirmation/email-confirmation.component';\nexport {LegalityDialogParams as ɵf,NgxAuthFirebaseUIConfig as ɵc} from './lib/interfaces';\nexport {defaultAuthFirebaseUIConfig as ɵa,ngxAuthFirebaseUIConfigFactory as ɵb} from './lib/interfaces/config.interface';"]}